<style>
  .quote-page-wrapper {
    background-color: #f8f8f8;
    padding: 2rem 0;
    font-family: 'Raleway', sans-serif;
  }
  .quote-page-container h1 {
    font-size: 32px;
    font-weight: 700;
    margin-bottom: 2rem;
    color: #333;
  }
  .quote-card {
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    padding: 24px;
    margin-bottom: 2rem;
  }
  .form-title-wrapper {
    padding-bottom: 1rem;
    border-bottom: 1px solid #e0e0e0;
  }
  .form-title-wrapper h2 {
    font-size: 20px;
    font-weight: 700;
  }
  .quote-table {
    width: 100%;
    border-collapse: collapse;
  }
  .quote-table thead {
    font-size: 14px;
    font-weight: 600;
    color: #6b7280;
    border-bottom: 1px solid #e0e0e0;
  }
  .quote-table th {
    padding: 1rem;
    text-align: left;
  }
  .quote-table th:nth-child(2) { text-align: center; }
  .quote-table th:nth-child(3) { text-align: right; }
  .quote-table tbody tr {
    border-bottom: 1px solid #e0e0e0;
  }
  .quote-table tbody tr:last-child {
    border-bottom: none;
  }
  .quote-table td {
    padding: 1.5rem 1rem;
    vertical-align: top;
  }
  .quote-item-image {
    width: 80px;
    height: 80px;
    border-radius: 8px;
    object-fit: cover;
  }
  .quote-quantity-input {
    width: 70px;
    height: 40px;
    text-align: center;
    border: 1px solid #e0e0e0;
    border-radius: 6px;
  }
  .quote-item-remove {
    display: block;
    width: 20px;
    height: 20px;
    margin: 0 auto;
  }
</style>

<div class="quote-page-wrapper">
  <main class="page-width">
      <h1 class="quote-page-title">{{ page.title }}</h1>
        <section class="quote-items-column quote-card">
            <div class="form-title-wrapper">
              <h2 class="h3">Tus Productos a Cotizar</h2>
            </div>
            <table class="quote-table">
              <thead>
                <tr>
                  <th style="width: 60%;">PRODUCTO</th>
                  <th style="width: 20%; text-align: center;">CANTIDAD</th>
                  <th style="width: 20%; text-align: right;">QUITAR</th>
                </tr>
              </thead>
              <tbody id="quote-table-body">
                <!-- Items will be injected here by JavaScript -->
              </tbody>
            </table>
        </section>
  </main>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const quoteTableBody = document.getElementById('quote-table-body');

    function renderQuote() {
      if (!window.QuoteManager) {
        console.error('QuoteManager is not available.');
        quoteTableBody.innerHTML = `<tr><td colspan="3">Error: No se pudo cargar el gestor de cotizaciones.</td></tr>`;
        return;
      }
      const quoteItems = window.QuoteManager.getQuote();
      quoteTableBody.innerHTML = '';

      if (quoteItems.length === 0) {
        const emptyRow = document.createElement('tr');
        emptyRow.innerHTML = `<td colspan="3">Tu cotizador está vacío. Agrega productos para poder solicitar una cotización.</td>`;
        quoteTableBody.appendChild(emptyRow);
      } else {
        quoteItems.forEach(item => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td style="display: flex; align-items: flex-start; gap: 1rem;">
              <a href="${item.url || '#'}"><img src="${item.imageUrl || ''}" alt="${item.title}" class="quote-item-image"></a>
              <div>
                <a href="${item.url || '#'}" style="text-decoration: none; color: inherit; font-weight: 600;">${item.title}</a>
                ${item.variantTitle && item.variantTitle !== 'Default Title' ? `<br><span style="font-size: 1.3rem; color: #6b7280;">${item.variantTitle}</span>` : ''}
                ${item.sku ? `<br><small style="font-size: 1.2rem; color: #6b7280;">SKU: ${item.sku}</small>` : ''}
              </div>
            </td>
            <td style="text-align: center;">
              <input type="number" class="quote-quantity-input" value="${item.quantity}" min="0" data-variant-id="${item.variantId}">
            </td>
            <td style="text-align: right;">
              <span class="quote-item-remove" data-variant-id="${item.variantId}" style="cursor: pointer; display: inline-block; width: 20px; height: 20px;">
                {{ 'icon-remove.svg' | asset_url | img_tag | replace: '<img', '<img style="width:100%;"' }}
              </span>
            </td>
          `;
          quoteTableBody.appendChild(row);
        });
      }
      document.dispatchEvent(new CustomEvent('quote:changed'));
      injectAndHideQuoteSummary();
    }

    quoteTableBody.addEventListener('click', function(event) {
      const removeButton = event.target.closest('.quote-item-remove');
      if (removeButton) {
        window.QuoteManager.removeFromQuote(removeButton.dataset.variantId);
        renderQuote();
      }
    });

    quoteTableBody.addEventListener('change', function(event) {
      if (event.target.classList.contains('quote-quantity-input')) {
        const { variantId } = event.target.dataset;
        const newQuantity = event.target.value;
        window.QuoteManager.updateQuantity(variantId, newQuantity);
        renderQuote();
      }
    });

    function injectAndHideQuoteSummary() {
      const formEmbed = document.getElementById('app-embed');
      if (!formEmbed || !formEmbed.shadowRoot) {
        // If the embed or its shadow root isn't ready, retry.
        return false;
      }

      const shadowRoot = formEmbed.shadowRoot;
      const summaryField = shadowRoot.querySelector('textarea[name="custom#resumen_de_cotizacion"]');

      if (summaryField) {
        // The wrapper to hide is the parent of the textarea
        const fieldWrapper = summaryField.closest('._formFieldContainer_ck6wz_5');
        if (fieldWrapper) {
          fieldWrapper.style.display = 'none';
        }
        summaryField.value = window.QuoteManager.getQuoteSummary();

        // Dispatch events to ensure the form app's state is updated
        summaryField.dispatchEvent(new Event('input', { bubbles: true }));
        summaryField.dispatchEvent(new Event('change', { bubbles: true }));

        console.log('Quote summary injected and events dispatched inside Shadow DOM.');
        return true; // Success!
      }
      return false; // Field not found, will retry.
    }

    // Shopify Forms can load after the initial DOM. We need to wait for it.
    let attempts = 0;
    const maxAttempts = 10;
    const interval = setInterval(() => {
      attempts++;
      const success = injectAndHideQuoteSummary();
      if (success || attempts >= maxAttempts) {
        clearInterval(interval);
        if (!success) {
          console.error('Could not find the "Resumen de Cotizacion" field after multiple attempts.');
        }
      }
    }, 500);

    renderQuote();

    function setupSuccessObserver() {
      const targetNode = document.body;
      const config = { childList: true, subtree: true };

      const callback = (mutationsList, observer) => {
        for (const mutation of mutationsList) {
          if (mutation.type === 'childList') {
            for (const node of mutation.addedNodes) {
              if (node.nodeType === 1) {
                // Check if the added node or any of its descendants matches the success banner selector.
                // This is more robust than checking text content.
                if (node.matches('[data-testid="banner-success"]') || node.querySelector('[data-testid="banner-success"]')) {
                  console.log('Success banner detected. Clearing quote.');
                  window.QuoteManager.clearQuote();
                  renderQuote();
                  observer.disconnect();
                  return; // Exit after finding the banner
                }
              }
            }
          }
        }
      };

      const observer = new MutationObserver(callback);
      observer.observe(targetNode, config);
    }

    setupSuccessObserver();
  });
</script>

{% schema %}
  {
    "name": "Página de Cotización",
    "tag": "section",
    "settings": []
  }
{% endschema %}
